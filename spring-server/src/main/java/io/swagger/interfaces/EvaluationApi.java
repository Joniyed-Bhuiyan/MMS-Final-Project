/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.14).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.interfaces;

import io.swagger.model.DepositInformation;
import io.swagger.model.Evaluation;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-05-28T06:14:18.281Z")

@Api(value = "evaluation", description = "the evaluation API")
@RequestMapping(value = "/api/v1")
public interface EvaluationApi {

    @ApiOperation(value = "add evaluation with date.", nickname = "addEvaluation", notes = "This table holds the evaluation information of manager.", tags={ "manager evaluation", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "information saved.."),
        @ApiResponse(code = 400, message = "bad request..") })
    @RequestMapping(value = "/evaluation",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addEvaluation(@ApiParam(value = "evaluation object that needs to be added to the db" ,required=true )  @Valid @RequestBody Evaluation body);


    @ApiOperation(value = "get evaluation information of a manager.", nickname = "getAvgEvaluation", notes = "Returns evaluation information for a prticular manager", tags={ "manager evaluation", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation"),
        @ApiResponse(code = 400, message = "Invalid month/year supplied"),
        @ApiResponse(code = 404, message = "information not found") })
    @RequestMapping(value = "/evaluation/avg/{month}/{year}/{manager_id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Void> getAvgEvaluation(@ApiParam(value = "information of a user to return",required=true) @PathVariable("month") Integer month,@ApiParam(value = "information of a user to return",required=true) @PathVariable("year") String year,@ApiParam(value = "information of a user to return",required=true) @PathVariable("manager_id") String managerId);


    @ApiOperation(value = "get evaluation information of a manager.", nickname = "getEvaluation", notes = "Returns evaluation information for a prticular manager", response = DepositInformation.class, tags={ "manager evaluation", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = DepositInformation.class),
        @ApiResponse(code = 400, message = "Invalid month/year supplied"),
        @ApiResponse(code = 404, message = "information not found") })
    @RequestMapping(value = "/evaluation/{month}/{year}/{manager_id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<DepositInformation> getEvaluation(@ApiParam(value = "information of a user to return",required=true) @PathVariable("month") Integer month,@ApiParam(value = "information of a user to return",required=true) @PathVariable("year") String year,@ApiParam(value = "information of a user to return",required=true) @PathVariable("manager_id") String managerId);

}
