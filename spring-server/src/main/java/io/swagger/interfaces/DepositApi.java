/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.14).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.interfaces;

import io.swagger.model.DepositInformation;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-05-28T06:14:18.281Z")

@Api(value = "deposit", description = "the deposit API")
@RequestMapping(value = "/api/v1")
public interface DepositApi {

    @ApiOperation(value = "add member deposit amount with date.", nickname = "addMoney", notes = "This table holds the secret information of member amount.", tags={ "deposit information", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "information saved.."),
        @ApiResponse(code = 400, message = "bad request..") })
    @RequestMapping(value = "/deposit",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addMoney(@ApiParam(value = "login_information object that needs to be added to the db" ,required=true )  @Valid @RequestBody DepositInformation body);


    @ApiOperation(value = "Delete a deposit information", nickname = "deleteDeposit", notes = "Delete deoisit information of a user.", tags={ "deposit information", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "meal deleted successfuly"),
        @ApiResponse(code = 400, message = "Invalid username supplied"),
        @ApiResponse(code = 404, message = "meal not found") })
    @RequestMapping(value = "/deposit/{depositId}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteDeposit(@ApiParam(value = " to delete",required=true) @PathVariable("depositId") String depositId);


    @ApiOperation(value = "get meal deposit information of a month.", nickname = "getMonthDeposit", notes = "Returns deposit information for a prticular month", response = DepositInformation.class, tags={ "deposit information", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = DepositInformation.class),
        @ApiResponse(code = 400, message = "Invalid month/year supplied"),
        @ApiResponse(code = 404, message = "information not found") })
    @RequestMapping(value = "/deposit/{month}/{year}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<DepositInformation> getMonthDeposit(@ApiParam(value = "information of a user to return",required=true) @PathVariable("month") Integer month,@ApiParam(value = "information of a user to return",required=true) @PathVariable("year") String year);


    @ApiOperation(value = "get meal deposit information of a month.", nickname = "getMonthDepositforMember", notes = "Returns deposit information for a prticular month", response = DepositInformation.class, tags={ "deposit information", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = DepositInformation.class),
        @ApiResponse(code = 400, message = "Invalid month/year supplied"),
        @ApiResponse(code = 404, message = "information not found") })
    @RequestMapping(value = "/deposit/{month}/{year}/{member_id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<DepositInformation> getMonthDepositforMember(@ApiParam(value = "information of a user to return",required=true) @PathVariable("month") Integer month,@ApiParam(value = "information of a user to return",required=true) @PathVariable("year") String year,@ApiParam(value = "information of a user to return",required=true) @PathVariable("member_id") String memberId);


    @ApiOperation(value = "update a deposit information", nickname = "updateDeposit", notes = "update deoisit information of a user.", tags={ "deposit information", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "deposit update successfuly"),
        @ApiResponse(code = 400, message = "Invalid deposit id  supplied"),
        @ApiResponse(code = 404, message = "information not found") })
    @RequestMapping(value = "/deposit/{depositId}",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    ResponseEntity<Void> updateDeposit(@ApiParam(value = " to delete",required=true) @PathVariable("depositId") Integer depositId,@ApiParam(value = "meal object that needs to be update" ,required=true )  @Valid @RequestBody DepositInformation body);

}
